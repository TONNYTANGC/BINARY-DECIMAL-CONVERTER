/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package scqm1103ASG2;

import java.math.BigDecimal;

/**
 *
 * @author User
 */
public class q4frame extends javax.swing.JFrame {

    /**
     * Creates new form q4frame
     */
    public q4frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        binaryTF = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        mantissaTF = new javax.swing.JTextField();
        exponentTF = new javax.swing.JLabel();
        expTF = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        newexpTF = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        newmanTF = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        decimalTF = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setForeground(new java.awt.Color(0, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Floating Point Binary to Decimal Converter");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 497, -1));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("From");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, -1, -1));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("To");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, -1, -1));

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Floating Point Binary");
        jLabel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 195, -1));

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Decimal");
        jLabel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 120, 230, -1));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ENTER FLOATING POINT BINARY : ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, -1, -1));

        binaryTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binaryTFActionPerformed(evt);
            }
        });
        jPanel1.add(binaryTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 472, -1));

        jButton1.setText("= Convert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, -1, -1));

        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 340, -1, -1));

        jButton3.setText("EXIT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 340, -1, -1));

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("ENTER BITS OF MANTISSA : ");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, -1, -1));

        mantissaTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mantissaTFActionPerformed(evt);
            }
        });
        jPanel1.add(mantissaTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 472, -1));

        exponentTF.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        exponentTF.setForeground(new java.awt.Color(255, 255, 255));
        exponentTF.setText("ENTER BITS OF EXPONENT :");
        jPanel1.add(exponentTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, -1, -1));

        expTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expTFActionPerformed(evt);
            }
        });
        jPanel1.add(expTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 300, 472, -1));
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 497, -1, -1));

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("EXPONENT :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, -1, -1));

        newexpTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newexpTFActionPerformed(evt);
            }
        });
        jPanel1.add(newexpTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, 472, -1));

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("MANTISSA AFTER SHIFTING FLOATING POINT :");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 430, -1, -1));

        newmanTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newmanTFActionPerformed(evt);
            }
        });
        jPanel1.add(newmanTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 460, 472, -1));

        jLabel11.setText("`");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 447, -1, -1));

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("DECIMAL :");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 490, -1, -1));

        decimalTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalTFActionPerformed(evt);
            }
        });
        jPanel1.add(decimalTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 520, 472, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/scqm1103ASG2/background3.jpeg"))); // NOI18N
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Mainframe main = new Mainframe();
        main.show();

        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int manbit;
        int expbit;
        
        String strbin = binaryTF.getText();
        manbit = Integer.parseInt(mantissaTF.getText());
        expbit = Integer.parseInt(expTF.getText());

        String mantissa = strbin.substring(0, manbit);
        String exponent = strbin.substring(manbit, strbin.length());
        
        // counting exponent
        int countE[] = new int[expbit];
        for (int i = expbit - 1; i >= 0; i--) {
            countE[i] = Character.getNumericValue(exponent.charAt(i));
        }

        int decE = 0;
        int a = expbit - 1;
        for (int i = 0; i < expbit; i++) {
            if (countE[i] == 1) {
                if (i > 0) {
                    decE += Math.pow(2, a);
                } else if (i == 0) {
                    decE -= Math.pow(2, a);
                }
            }
            a--;
        }
        String strdecE = Integer.toString(decE);
        newexpTF.setText(strdecE);

        //counting mantissa 
        BigDecimal bigdecimal = new BigDecimal(mantissa);
        BigDecimal fmantissa = bigdecimal.movePointLeft(manbit - 1);
        String mantissa1 = "";
        String mantissa2 = "";

        int fpoint = -decE;

        if (decE > 1) { // positive exponent 
            mantissa1 = mantissa.substring(0, decE + 1);
            mantissa2 = mantissa.substring(decE + 1, manbit);
            newmanTF.setText(mantissa1 + "." + mantissa2);
            
            // counting the first part of mantissa 
            int lengthM1 = mantissa1.length();
            int countM1[] = new int[lengthM1];

            for (int i = lengthM1 - 1; i >= 0; i--) {
                countM1[i] = Character.getNumericValue(mantissa1.charAt(lengthM1 - 1)); //store in array 
                lengthM1--;
                if (lengthM1 == 0) {
                    break;
                }
            }

            int signbit = mantissa.charAt(0);
            int lengthFM1 = mantissa1.length(); //re-declare since lengthM1 ard become 0 

            int decM1 = 0; // the value of first mantissa 
            int b = (lengthFM1 - 1);

            for (int i = 0; i < lengthFM1; i++) {
                if (countM1[i] == 1) {
                    if (i > 0) {
                        decM1 += Math.pow(2, b);
                    } else if (i == 0) {
                        if (signbit == '1') {
                            decM1 -= Math.pow(2, b);
                        } else if (signbit == '0') {
                            decM1 += Math.pow(2, b);
                        }
                    }
                }
                b--;
            }

            //counting second mantissa
            int lengthM2 = mantissa2.length();
            int countM2[] = new int[lengthM2];

            for (int i = lengthM2 - 1; i >= 0; i--) {
                countM2[i] = Character.getNumericValue(mantissa2.charAt(lengthM2 - 1)); //store in array 
                lengthM2--;
                if (lengthM2 == 0) {
                    break;
                }
            }
            
            int lengthFM2 = mantissa2.length();
            double decM2 = 0;

            for (int i = 0; i < lengthFM2; i++) {
                if (countM2[i] == 1) {
                    if (i >= 0) {
                        decM2 += (1 / Math.pow(2, i + 1));
                    }
                }
            }
            String strdecM2 = Double.toString(decM2);
            

            double dec = (double) decM1 + decM2;
            String strdec = Double.toString(dec);
            decimalTF.setText(strdec);

            // negative exponent    
        } else {
            BigDecimal newmantissa = bigdecimal.movePointLeft(manbit - 1 + fpoint);

            String strmantissa = newmantissa.toString();
            newmanTF.setText(strmantissa);

            int lengthM = strmantissa.length();
            int countM[] = new int[lengthM];

            for (int i = lengthM - 1; i >= 0; i--) {
                countM[i] = Character.getNumericValue(strmantissa.charAt(lengthM - 1)); //store in array 
                lengthM--;
                if (lengthM == 0) {
                    break;
                }
            }

            int signbitM = mantissa.charAt(0);
            int lengthFM = strmantissa.length(); //re-declare since lengthM1 ard become 0 

            double decM = 0;
            int q = strmantissa.indexOf("1");

            for (int i = 0; i < lengthFM; i++) {
                if (countM[i] == 1) {
                    if (i > q) {
                        decM += (double) (1 / (Math.pow(2, i - 1)));
                    } else if (i == q) {
                        if (signbitM == '1') {
                            decM -= (double) (1 / (Math.pow(2, i - 1)));
                        } else if (signbitM == '0') {
                            decM += (double) (1 / (Math.pow(2, i - 1)));
                        }
                    }
                }

            }
            String strdecM = Double.toString(decM);
            decimalTF.setText(strdecM);

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void binaryTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binaryTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_binaryTFActionPerformed

    private void mantissaTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mantissaTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mantissaTFActionPerformed

    private void expTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_expTFActionPerformed

    private void newexpTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newexpTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newexpTFActionPerformed

    private void newmanTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newmanTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newmanTFActionPerformed

    private void decimalTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_decimalTFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(q4frame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(q4frame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(q4frame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(q4frame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new q4frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField binaryTF;
    private javax.swing.JTextField decimalTF;
    private javax.swing.JTextField expTF;
    private javax.swing.JLabel exponentTF;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField mantissaTF;
    private javax.swing.JTextField newexpTF;
    private javax.swing.JTextField newmanTF;
    // End of variables declaration//GEN-END:variables
}
